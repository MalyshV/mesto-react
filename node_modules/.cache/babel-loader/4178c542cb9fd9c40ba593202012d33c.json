{"ast":null,"code":"var _jsxFileName = \"/Users/veronika/dev/mesto-react/src/components/PopupWithForm.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PopupWithForm(props) {\n  /*#__PURE__*/\n  _jsxDEV(\"div\", {\n    className: `popup popup_type_${props.name}`,\n    id: \"popup\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__content popup__content_theme_input\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"popup__close page__buttons\",\n        type: \"button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"popup__title\",\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        action: \"#\",\n        name: `${props.name}-form`,\n        children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"username\",\n            className: \"input-container__item\",\n            type: \"text\",\n            name: \"name\",\n            placeholder: \"\\u0418\\u043C\\u044F\",\n            defaultValue: \"\",\n            tabIndex: \"1\",\n            minLength: \"2\",\n            maxLength: \"40\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"input-container__input-error\",\n            id: \"username-error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"job\",\n            className: \"input-container__item\",\n            type: \"text\",\n            name: \"about\",\n            placeholder: \"\\u041F\\u0440\\u043E\\u0444\\u0435\\u0441\\u0441\\u0438\\u044F\",\n            defaultValue: \"\",\n            tabIndex: \"2\",\n            minLength: \"2\",\n            maxLength: \"200\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"input-container__input-error\",\n            id: \"job-error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"input-container__button\",\n            children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 3\n  }, this);\n} // children - вложенное содержимое в виде JSX-разметки, отличающейся для всех четырёх попапов. Внутри самого компонента оно будет доступно через специальный пропс children, который также должен быть подставлен в нужном месте в JSX.\n// children - это инпуты, получается.. \n\n\n_c = PopupWithForm;\nexport default PopupWithForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopupWithForm\");","map":{"version":3,"sources":["/Users/veronika/dev/mesto-react/src/components/PopupWithForm.js"],"names":["React","PopupWithForm","props","name","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B;AAAA;AAAK,IAAA,SAAS,EAAG,oBAAmBA,KAAK,CAACC,IAAK,EAA/C;AAAkD,IAAA,EAAE,EAAC,OAArD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,2CAAf;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,4BAAlB;AAA+C,QAAA,IAAI,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA,kBAA8BD,KAAK,CAACE;AAApC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAuB,QAAA,MAAM,EAAC,GAA9B;AAAkC,QAAA,IAAI,EAAG,GAAEF,KAAK,CAACC,IAAK,OAAtD;AAAA,+BACE;AAAU,UAAA,SAAS,EAAC,iBAApB;AAAA,kCACE;AAAO,YAAA,EAAE,EAAC,UAAV;AAAqB,YAAA,SAAS,EAAC,uBAA/B;AAAuD,YAAA,IAAI,EAAC,MAA5D;AAAmE,YAAA,IAAI,EAAC,MAAxE;AAA+E,YAAA,WAAW,EAAC,oBAA3F;AAAiG,YAAA,YAAY,EAAC,EAA9G;AAAiH,YAAA,QAAQ,EAAC,GAA1H;AAA8H,YAAA,SAAS,EAAC,GAAxI;AAA4I,YAAA,SAAS,EAAC,IAAtJ;AAA2J,YAAA,QAAQ;AAAnK;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAM,YAAA,SAAS,EAAC,8BAAhB;AAA+C,YAAA,EAAE,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAO,YAAA,EAAE,EAAC,KAAV;AAAgB,YAAA,SAAS,EAAC,uBAA1B;AAAkD,YAAA,IAAI,EAAC,MAAvD;AAA8D,YAAA,IAAI,EAAC,OAAnE;AAA2E,YAAA,WAAW,EAAC,wDAAvF;AAAmG,YAAA,YAAY,EAAC,EAAhH;AAAmH,YAAA,QAAQ,EAAC,GAA5H;AAAgI,YAAA,SAAS,EAAC,GAA1I;AAA8I,YAAA,SAAS,EAAC,KAAxJ;AAA8J,YAAA,QAAQ;AAAtK;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAM,YAAA,SAAS,EAAC,8BAAhB;AAA+C,YAAA,EAAE,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAC,yBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAeD,C,CAED;AAEA;;;KApBSF,a;AAsBT,eAAeA,aAAf","sourcesContent":["import React from 'react';\n\nfunction PopupWithForm(props) {\n  <div className={`popup popup_type_${props.name}`} id=\"popup\">\n    <div className=\"popup__content popup__content_theme_input\">\n      <button className=\"popup__close page__buttons\" type=\"button\"></button>\n      <h2 className=\"popup__title\">{props.title}</h2>\n      <form className=\"form\" action=\"#\" name={`${props.name}-form`}>\n        <fieldset className=\"input-container\">\n          <input id=\"username\" className=\"input-container__item\" type=\"text\" name=\"name\" placeholder=\"Имя\" defaultValue=\"\" tabIndex=\"1\" minLength=\"2\" maxLength=\"40\" required></input>\n          <span className=\"input-container__input-error\" id=\"username-error\"></span>\n          <input id=\"job\" className=\"input-container__item\" type=\"text\" name=\"about\" placeholder=\"Профессия\" defaultValue=\"\" tabIndex=\"2\" minLength=\"2\" maxLength=\"200\" required></input>\n          <span className=\"input-container__input-error\" id=\"job-error\"></span>\n          <button type=\"submit\" className=\"input-container__button\">Сохранить</button>\n        </fieldset>\n      </form>\n    </div>\n  </div>\n}\n\n// children - вложенное содержимое в виде JSX-разметки, отличающейся для всех четырёх попапов. Внутри самого компонента оно будет доступно через специальный пропс children, который также должен быть подставлен в нужном месте в JSX.\n\n// children - это инпуты, получается.. \n\nexport default PopupWithForm;"]},"metadata":{},"sourceType":"module"}