{"ast":null,"code":"class Api {\n  constructor(config) {\n    this._baseUrl = config.baseUrl;\n    this._headers = config.headers;\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}users/me`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._checkRespons);\n  }\n\n  setUserInfo(data) {\n    return fetch(`${this._baseUrl}users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(this._checkRespons);\n  }\n\n  setUserAvatar(data) {\n    return fetch(`${this._baseUrl}users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(this._checkRespons);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}cards`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._checkRespons);\n  }\n\n  addNewCard(data) {\n    return fetch(`${this._baseUrl}cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(this._checkRespons);\n  }\n\n  removeCard(cardId) {\n    return fetch(`${this._baseUrl}cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkRespons);\n  }\n\n  setlike(cardId) {\n    return fetch(`${this._baseUrl}cards/likes/${cardId}`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(this._checkRespons);\n  }\n\n  removeLike(cardId) {\n    return fetch(`${this._baseUrl}cards/likes/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkRespons);\n  }\n  /*loadData() {\n    return Promise.all([this.getUserInfo(), this.getInitialCards()]);\n  }*/\n\n\n  _checkRespons(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-25/',\n  headers: {\n    authorization: '61426457-aa06-4805-b055-d8aeddd40fb8',\n    'Content-Type': 'application/json'\n  }\n});\nexport { api }; // мой токен: 61426457-aa06-4805-b055-d8aeddd40fb8\n// идентификатор группы: cohort-25","map":{"version":3,"sources":["/Users/veronika/dev/mesto-react/src/utils/Api.js"],"names":["Api","constructor","config","_baseUrl","baseUrl","_headers","headers","getUserInfo","fetch","method","then","_checkRespons","setUserInfo","data","body","JSON","stringify","name","about","setUserAvatar","avatar","getInitialCards","addNewCard","link","removeCard","cardId","setlike","removeLike","res","ok","json","Promise","reject","status","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n  constructor(config) {\n    this._baseUrl = config.baseUrl;\n    this._headers = config.headers;\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}users/me`, {\n      method: 'GET',\n      headers: this._headers,\n  })\n  .then(this._checkRespons);\n  }\n\n  setUserInfo(data) {\n    return fetch(`${this._baseUrl}users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about,\n      })\n    })\n    .then(this._checkRespons);\n  }\n\n  setUserAvatar(data) {\n    return fetch(`${this._baseUrl}users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar,\n      })\n    })\n    .then(this._checkRespons);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}cards`, {\n      method: 'GET',\n      headers: this._headers,\n    })\n    .then(this._checkRespons);\n  }\n\n  addNewCard(data) {\n    return fetch(`${this._baseUrl}cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link,\n      })\n    })\n    .then(this._checkRespons);\n  }\n\n  removeCard(cardId) {\n    return fetch(`${this._baseUrl}cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n    .then(this._checkRespons);\n  }\n\n  setlike(cardId) {\n    return fetch(`${this._baseUrl}cards/likes/${cardId}`, {\n      method: 'PUT',\n      headers: this._headers,\n    })\n    .then(this._checkRespons);\n  }\n\n  removeLike(cardId) {\n    return fetch(`${this._baseUrl}cards/likes/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n    .then(this._checkRespons);\n  }\n\n  /*loadData() {\n    return Promise.all([this.getUserInfo(), this.getInitialCards()]);\n  }*/\n\n  _checkRespons(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-25/',\n  headers: {\n    authorization: '61426457-aa06-4805-b055-d8aeddd40fb8',\n    'Content-Type': 'application/json'\n  }\n});\n\nexport { api };\n\n// мой токен: 61426457-aa06-4805-b055-d8aeddd40fb8\n// идентификатор группы: cohort-25\n"]},"metadata":{},"sourceType":"module"}